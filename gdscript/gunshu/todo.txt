(A) 2024-11-30 Redraw all static and animated sprites with aseprite in pixel-art, use nice colors and specifically consider making the game in black and white and other monochromatic tones for now @engine @art
(A) 2024-11-30 Implement all existing game functionality in Godot4's engine @engine
(A) 2024-11-30 Player movement including 8-directional turning and blink @engine
(A) 2024-11-30 Existing sprites that I've drawn @engine
(A) 2024-11-30 Moving camera that follows the player around similar to enter the gungeon @engine
(A) 2024-11-30 Functioning pickup and powerup bar system @engine
(A) 2024-11-30 Dynamic and naturalistic level generation via wave function collapse, specifically for the purpose of creating dungeons and overworld levels with chests, doors, rooms, bossrooms and other details @engine
(A) 2024-11-30 Functioning pickup and inventory system @engine
(A) 2024-11-30 Consider making the entire game boss-based like Furi so any fodder mobs are just there so the player can harvest them to equip powerups to fight the bosses @engine
(A) 2024-11-30 Orient the entire game to be combat-heavy, specifically on sword-focused combat @idea @engine
(A) 2024-11-30 Player movement should be [8 direction movement], [dodge roll], [directional attack], [directional parry], [counter attack after parry] @engine @controls 
(A) 2024-11-30 Give enemies melee and long-range attacks all based on sword combat, so enemies can send their attacks and slashes flying and the player can parry them either way @engine @idea
(A) 2024-11-30 Make timed parrying and perfectly timed parries a cornerstone of the game @engine @idea
(A) 2024-11-30 In the future, consider making enemies and the player procedurally animated with moving joints @engine

(A) 2024-12-06 Gradiated movement for realistic climbing up and climbing down stairs https://youtube.com/shorts/-rJgj82x3xA?si=mAIjqUZ90Y00bGYq @engine
(A) 2024-12-06 This pickup system should be similar to risk of rain where there are many different items each with their own ability buffs and debuffs and that can have interlocking synergies @engine
(A) 2024-12-06 Further powerups and synergies and a way to store them in a readable text file or some equivalent within written code @engine
(A) 2024-12-06 Add a basic enemy the player can interact with and damage and make damage fun and squishy and crunchy to deal out @engine
(A) 2024-12-06 Add a screen where players select the stat buff they want to go with if the sprite isn't picked up but is collected after certain bossfights, this will allow me to show the detailed hand drawn sized up sprites in game, inspiration is here (https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgIhnRr1gnqCn5nGKIwUxPyxfs456wXeYXBQ&s) @engine
(A) 2024-12-06 Each item's sprite should have an outline dictating how good it is, use RISK OF RAIN or this video's colorscheme and figure out if I can color the outlines of each sprite programatically so the same item can have different rarities @engine @feature
(A) 2024-12-06 Reference is here also https://youtu.be/f51IV88914c?si=5CIWYvk7CFlqbGvrI @reference @admin
(A) 2024-12-06 Update all the below todo.txt follow up actions to be for a Godot4 project per here @engine
(A) 2024-12-06 Implement Godot4 Multiplayer and follow this tutorial https://youtu.be/e0JLO_5UgQo?si=j3Dd6q_bhJxCWZmN as needed @engine

(B) 2024-12-13 All future functionality and parts of gunshu should be added as seperate python files, where each file contains functions that accept the screen as one parameter and render the result to the screen, returning a boolean for successful function execution @engine
(B) 2024-12-13 Consider making the player's attack a generic attack that is rendered once only regardless and only the attack's range can extend based on the specified value, ask GPT for help with implementing the basic attack animation @feature @engine
(B) 2024-12-13 Make the camera infinite scroll so the player can move farther away similar to vampire survivors @engine
(B) 2024-12-13 Implement a cosmetics system so the player character can have items placed on top of them, and draw a sprite for that item in all 8 directions first @engine @feature
(B) 2024-12-13 Consider deactiviting the player's inventory system for now so I can focus on other aspects of the character @engine
(B) 2024-12-13 Consider deactivating the player's blink ability for now so I can test the inventory system and other elements first, maybe blink is something they can activate only when certain ofuda are activated so its a more modular stacking system @engine
(B) 2024-12-13 Figure out a way to make the function handle_input_with_mouse_8_directions() within ./player_input.py able to handle all possible player inputs, including when blink is activated and when it is not @debug @refactor
(B) 2024-12-13 Add armour as item pickups that the player cna then see in their inventory and move to their head, body or legs @engine
(B) 2024-12-13 Give the armour actual stats so that there's then a reason for the active buffs or boons bar to be displayed on the top right @engine
(B) 2024-12-13 Then add the logic for a HUD on the top-right where the player can see their existing buffs or boons and their icons on the top-right @engine
(B) 2024-12-13 Make the sprites be able to face 8 directions (N,S,E,W NE, SE, SW, NW) and have a compass display on the top right
(B) 2024-12-13 Get directional sprites working, then get different coloured versions of the player loading in with a shader native to pyagme @engine
(B) 2024-12-13 Then implement collisions and let players talk to each other when they're close enough to each other @engine
(B) 2024-12-13 See if there's anyway to implement proximity chat into gunshu @engine
(B) 2024-12-13 Then implement sound @engine
(B) 2024-12-13 Add in screenshake and other small quality of life updates when there's collisions with enemies @engine
(B) 2024-12-13 Add a moving camera that follows each player and snaps to a given dungeon room similar to the old legend of zelda games for now, also to facilitate easier level generation @engine
(B) 2024-12-13 Add in power ups with a tatoo-based system where the player's arms and legs can be covered with various insignia (hanya masks, etc) @engine
(B) 2024-12-13 Continue tweaking BLINK moveset so there's screenshake and other vfx as well @engine
(B) 2024-12-13 Make the code more modular and allow all values like screen size, player metadata to be specified within a config.json that is serialised upon game launch so that properties can be easily tweaked in subsequent powerups @refactor
(B) 2024-12-13 Need to debug the cooldown from the blink feature so that opening the inventory halts the blink timer cooldown from running down, or allow the inventory to only be opened outside combat in the shop areas to circumvent this issue @feature
(B) 2024-12-13 Debug the render_responsive_dragging() function within ./inventory.py to fix the buggy dragging of existing items presently where currently items can't be dragged from the inventory to armour slots and a weird blue square artifact appears @debug

(C) 2024-12-20 Add function that deserializes level data from a json that contains metadata and other specifications so levels can be saved as jsons @engine
(C) 2024-12-20 Add a map-builder that runs seperate from the game so that creating maps is easier for me and for other players if they want to use it @engine
(C) 2024-12-20 If I have a level deserializing function, consider writing a serializing function that will then convert generated maps from the map maker into a json @engine
(C) 2024-12-20 Implement naturalistic world and level generation by exploring different methods, wave function collapse, pearlin noise, and other methods like miziziz and enter the gungeon's approach @engine

(D) 2024-12-27 Work out how to integrate movement of the player and user-defined controls within display.py into the rest of the client-server code @feature @engine
(D) 2024-12-27 After integrating multiplayer, the camera should follow each player around but the server should be able to track which room each player is in and toggle between all active players, so that when the actual game is up dead players can watch gameplay of players still alive @feature
(D) 2024-12-27 Integrate an inventory system with the lore to give a reason for why player tatoos give him abilities @feature
(D) 2024-12-27 Inlude a multiplayer lobby and entry screen similar to JDH's wizard game here (https://youtu.be/b5ovU9xeQ7c?si=tCMMtktlJ0ZiCKJs) covered in the last few minutes of the video @feature
(D) 2024-12-27 Get a custom font in and get the FPS and CPU usage displayed on the bottom right of the screen, as well as Gunshu's current build and live player count @feature
(D) 2024-12-27 Add a simple drag and drop element system that I can use to create levels with or implement this as a level editing system @feature
(D) 2024-12-27 There has to be a better way for the server to smartly identify and rename each client that joins, as well as identifying old clients that have already joined, add functionality for this probably with a logbook of existing users, sockets and their IPs but encrypt for PDPA if required @debug
(D) 2024-12-27 Port all game engine code to client.py and server.py and actually integrate a client server architecture into everything @feature
(D) 2024-12-27 Make all of the server-side and client-side functions that create a socket and returns it @feature
(D) 2024-12-27 Work on testing out server code and allowing up to 6 players to join the server first, consider handling the code like a chatroom for now @feature
(D) 2024-12-27 Consider including a unique reloading system if weapons have reloading enabled to begin with, where players must draw a unique shape with their mouse cursor in combination with certain buttons to reload the weapon, could be used to recreate the feeling of casting an insignia for the player @idea @feature
(D) 2024-12-27 Consider recording the game sounds myself it might be funny lol @engine
(D) 2024-12-27 Add particle effects for everything @engine
(D) 2024-12-27 Consider tweaking the player inventory so that it has 6 slots, 1 head, 1 body, 2 arms, 2 legs for power-ups in the form of tattoos to be placed on @engine @idea

(E) 2024-12-27 Consider the direction gunshu is taking, and whether I want it to be a crafting focused game like Minecraft, an action-focused game like Hades, or an in-between like Moonlighter, but refine the direction to be clearer and be more targetted in execution @idea
(E) 2024-12-27 Lore-wise, make Gunshu a Hades 3 clone that ties specifically into Japanese mythology, with spirits, yokai and other ghosts into the overall story, ask GPT for help generating ideas if I need help @feature
(E) 2024-12-27 Use JDH Minecraft's practise of only drawing a two-toned sprite and then using pygame to recolor the sprite for all 6 characters (https://youtu.be/hvLYzISx6dU?si=bYloWsOA0qPxeLnp) @idea 
(E) 2024-12-27 Keep the player character designs simple blobs but make the monster design sprites detailed and stylized, consider having the background in neutral colors (white and gray) @idea @design 
(E) 2024-12-27 Emphasize the multiplayer aspect of the game and make it like multiplayer hades or ember knights in terms of having tight interlocking systems with crunchy controls and good feedback and screenshake on attacking @idea 
(E) 2024-12-27 Consider making a complete minicraft clone where players can place items down as well @idea 
(E) 2024-12-27 Use waveform generation for rougelite-tier random generation of the terrain @idea 
(E) 2024-12-27 Consider making gunshu like Hypnospace Outlaw, or some other website that appears to simulate a simple game of extreme tic-tac-toe but with a chat function? @idea 
(E) 2024-12-27 Consider integrating an LLM to generate natural language-like dialogue for the enemies, NPCs and other characters @feature
(E) 2024-12-27 Add additional cutscene functionality and consider creating a function that makes creating cutscenes easier, additionally consider whether i want the cutscene to run client-side or server-side @idea @feature

(F) 2024-12-30 Add details to README.md once available @admin @readme
(F) 2024-12-30 Add containerisation and deployment with Docker @admin @readme
(F) 2024-12-30 Add functionality for client-side to initiate closing the game and to automatically close the server socket when there are no clients left @debug

x (A) 2024-11-20 Debug the broken camera code @engine @debug
x (A) 2024-11-20 Continue tweaking the level generation code to account for other level items like chests, walls, doors, rooms and others for wave function collapse and make it more dungeon-specific @engine
x (A) 2024-11-20 Within ./level_generation.py, implement other kinds of level generation like perlin noise and scour youtube for other options to see what ends up generating the most realistic level layouts specifically for open-world exploration and dungeon-based exploration @engine @research
x (A) 2024-11-20 Get level sprites loaded into the game @engine 
x (A) 2024-11-20 Work out how to add a scrolling camera so that players can navigate the level terrain not restricted to the static window @engine
x (A) 2024-11-20 Implement working pickups and inventory system asap @engine
x (A) 2024-11-20 Fix the buggy powerup bar, especially why it isn't rendering properly @debug @engine
x (A) 2024-11-20 Also make the window size and relative sprite size much larger @engine
x (A) 2024-11-20 Add a pickups system and allow the player to first pickup items to begin with with a simplified inventory system rewritten from the groundup @engine
x (A) 2024-11-20 Continue adding more powerups to ./powerup.json @engine @admin
x (A) 2024-11-20 Add an intuitive HUD that shows the player's active powerups on the top-left of the screen with minimal words @engine
x (A) 2024-11-20 This HUD should also allow a numerical value on the bottom right of the item sprite to be specified so that power-ups can be stacked and easily reflected @engine
x (A) 2024-11-20 Add functionality for the player stats to be tangibly boosted upon picking up an item, make it more modular than it already is @engine
x (A) 2024-11-20 Ask GPT to help generate ideas for existing power-ups, their names, backgrounds and stat boosts to the player, where some power-ups especially the more powerful ones can have debuffs also that act as a tradeoff for players @engine
x (A) 2024-11-30 Follow this tutorial (https://youtu.be/GwCiGixlqiU?si=snUpDei-MYWcjNDC) to get familiar with making a 2D game in Godot first @learning
